# Generated by Django 3.0.5 on 2020-04-19 02:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('clientid', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('clientname', models.CharField(max_length=200)),
                ('clienttype', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('modelnumber', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('productname', models.CharField(max_length=200)),
                ('celltechnology', models.CharField(max_length=200)),
                ('cellman', models.CharField(max_length=200)),
                ('numcells', models.IntegerField()),
                ('numcellsinseries', models.IntegerField()),
                ('numseriesstrings', models.IntegerField()),
                ('numdiodes', models.IntegerField()),
                ('productlength', models.FloatField()),
                ('productwidth', models.FloatField()),
                ('productweight', models.FloatField()),
                ('superstratetype', models.CharField(max_length=200)),
                ('superstrateman', models.CharField(max_length=200)),
                ('substratetype', models.CharField(max_length=200)),
                ('substrateman', models.CharField(max_length=200)),
                ('frametype', models.CharField(max_length=200)),
                ('frameadhesive', models.CharField(max_length=200)),
                ('encapsulanttype', models.CharField(max_length=200)),
                ('encapsulantman', models.CharField(max_length=200)),
                ('junctionboxtype', models.CharField(max_length=200)),
                ('junctionboxman', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Testsequence',
            fields=[
                ('sequence_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('sequence_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Teststandard',
            fields=[
                ('standardid', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('standardname', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('publisheddate', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('middlename', models.CharField(max_length=200)),
                ('jobtitle', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('officephone', models.IntegerField()),
                ('cellphone', models.IntegerField()),
                ('prefix', models.CharField(max_length=200)),
                ('clientid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('serviceid', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('servicename', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('isfirequired', models.CharField(max_length=3)),
                ('fifrequency', models.CharField(max_length=200)),
                ('standardid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Teststandard')),
            ],
        ),
        migrations.CreateModel(
            name='Performancedata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maxsystemvoltage', models.IntegerField()),
                ('voc', models.FloatField()),
                ('isc', models.FloatField()),
                ('vmp', models.FloatField()),
                ('imp', models.FloatField()),
                ('pmp', models.FloatField()),
                ('ff', models.FloatField()),
                ('modelnumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product')),
                ('sequenceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Testsequence')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('address1', models.CharField(max_length=200)),
                ('address2', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=2)),
                ('postalcode', models.IntegerField()),
                ('country', models.CharField(max_length=200)),
                ('phonenumber', models.IntegerField()),
                ('faxnumber', models.IntegerField()),
                ('clientid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('certificatenumber', models.IntegerField(primary_key=True, serialize=False)),
                ('certid', models.CharField(max_length=200)),
                ('reportnumber', models.CharField(max_length=200)),
                ('issuedate', models.DateField(auto_now_add=True)),
                ('locationid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Location')),
                ('modelnumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product')),
                ('standardid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Teststandard')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User')),
            ],
        ),
    ]
