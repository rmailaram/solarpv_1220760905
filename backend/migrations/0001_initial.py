# Generated by Django 3.2.8 on 2021-10-25 16:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientId', models.CharField(max_length=50)),
                ('client_code', models.CharField(max_length=50)),
                ('client_name', models.CharField(max_length=50)),
                ('client_type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'clients',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelNum', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('cell_technology', models.CharField(max_length=50)),
                ('cell_manufacturer', models.CharField(max_length=50)),
                ('number_of_cells', models.CharField(max_length=50)),
                ('number_of_cells_in_series', models.CharField(max_length=50)),
                ('number_of_series_strings', models.CharField(max_length=50)),
                ('number_of_diodes', models.CharField(max_length=50)),
                ('product_length', models.CharField(max_length=50)),
                ('product_width', models.CharField(max_length=50)),
                ('product_weigtht', models.CharField(max_length=50)),
                ('superstrate_type', models.CharField(max_length=50)),
                ('Superstrate_manufacturer', models.CharField(max_length=50)),
                ('substrate_type', models.CharField(max_length=50)),
                ('Substrate_manufacturer', models.CharField(max_length=50)),
                ('frame_type', models.CharField(max_length=50)),
                ('Frame_adhesive', models.CharField(max_length=50)),
                ('encapsulant_type', models.CharField(max_length=50)),
                ('encapsulant_manufacturer', models.CharField(max_length=50)),
                ('junction_box_type', models.CharField(max_length=50)),
                ('Junction_box_manufacturer', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='TestSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_id', models.CharField(max_length=50)),
                ('sequence_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'test_sequence',
            },
        ),
        migrations.CreateModel(
            name='TestStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('published_date', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'test_standard',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('job_title', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('officephone', models.CharField(max_length=50)),
                ('cellphone', models.CharField(max_length=50)),
                ('prefix', models.CharField(max_length=50)),
                ('isstaff', models.CharField(max_length=50)),
                ('client_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.client')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('is_FI_required', models.CharField(max_length=50)),
                ('FI_frequency', models.CharField(max_length=50)),
                ('service_name', models.CharField(max_length=50)),
                ('test_standard_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.teststandard')),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='PerformanceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_system_voltage', models.CharField(max_length=50)),
                ('open_circuit_voltage', models.CharField(max_length=50)),
                ('short_circuit_current', models.CharField(max_length=50)),
                ('voltage_at_max_power', models.CharField(max_length=50)),
                ('current_at_max_power', models.CharField(max_length=50)),
                ('Max_power_output', models.CharField(max_length=50)),
                ('fill_factor', models.CharField(max_length=50)),
                ('model_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('test_sequence_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.testsequence')),
            ],
            options={
                'db_table': 'performance_data',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postalcode', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('phonenumber', models.CharField(max_length=50)),
                ('fax_number', models.CharField(max_length=50)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.client')),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_number', models.CharField(max_length=50)),
                ('report_number', models.CharField(max_length=50)),
                ('issue_date', models.CharField(max_length=50)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.location')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('test_standard_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.teststandard')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user')),
            ],
            options={
                'db_table': 'certificates',
            },
        ),
    ]
